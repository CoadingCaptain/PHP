<?php

тЬЕ 1. sort() тЖТ Ascending order (рж╕рж╛ржзрж╛рж░ржг sort)
 Indexed array ржХрзЗ ржЫрзЛржЯ ржерзЗржХрзЗ ржмрзЬ рж╕рж╛ржЬрж╛рзЯ (key preserve ржХрж░рзЗ ржирж╛)ред

 $numbers = [2, 3, 1, 5];
 sort($numbers);
 print_r($numbers);

 Output : Array
          (
              [0] => 1
              [1] => 2
              [2] => 3
              [3] => 5
          )

 тЬЕ 2. rsort() тЖТ Descending order
 Indexed array ржХрзЗ ржмрзЬ ржерзЗржХрзЗ ржЫрзЛржЯ рж╕рж╛ржЬрж╛рзЯред

 $numbers = [2, 3, 1, 5];
 rsort($numbers);
 print_r($numbers);

 Output : Array
          (
              [0] => 5
              [1] => 3
              [2] => 2
              [3] => 1
          )

 тЬЕ 3. asort() тЖТ Associative array: value ржЕржирзБрж╕рж╛рж░рзЗ Ascending sort, Key ржЧрзБрж▓рзЛ ржарж┐ржХ ржерж╛ржХрзЗ, value ржЧрзБрж▓рзЛ sort рж╣рзЯред

 $numbers = ["a" => 50, "b" => 20, "c" => 40];
 asort($numbers);
 print_r($numbers);

 Output : Array
          (
              [b] => 20
              [c] => 40
              [a] => 50
          )

 тЬЕ 4. arsort() тЖТ Associative array: value ржЕржирзБрж╕рж╛рж░рзЗ Descending sort, Key ржарж┐ржХ рж░рзЗржЦрзЗ, ржмрзЬ ржерзЗржХрзЗ ржЫрзЛржЯ value ржЕржирзБржпрж╛рзЯрзА рж╕рж╛ржЬрж╛рзЯред

 $numbers = ["a" => 50, "b" => 20, "c" => 40];
 arsort($numbers);
 print_r($numbers);

 Output : Array
          (
              [a] => 50
              [c] => 40
              [b] => 20
          )

 тЬЕ 5. ksort() тЖТ Associative array: Key ржЕржирзБрж╕рж╛рж░рзЗ Ascending sort

 $numbers = ["a" => 50, "c" => 40, "b" => 70];
 ksort($numbers);
 print_r($numbers);

 Output : Array
          (
              [a] => 50
              [b] => 70
              [c] => 40
          )

 тЬЕ 6. krsort() тЖТ Associative array: Key ржЕржирзБрж╕рж╛рж░рзЗ Descending sort

 $numbers = ["a" => 50, "c" => 40, "b" => 70];
 krsort($numbers);
 print_r($numbers);

 Output : Array
          (
              [c] => 40
              [b] => 70
              [a] => 50
          )

 тЬЕ array_filter() - ржлрж╛ржВрж╢ржиржЯрж┐ ржмрзНржпржмрж╣рж╛рж░ рж╣рзЯ ржПржХржЯрж┐ ржЕрзНржпрж╛рж░рзЗ ржерзЗржХрзЗ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ рж╢рж░рзНржд ржкрзВрж░ржг ржирж╛ ржХрж░рж╛ ржЙржкрж╛ржжрж╛ржиржЧрзБрж▓рзЛ ржмрж╛ржж ржжрж┐рзЯрзЗ ржирждрзБржи ржЕрзНржпрж╛рж░рзЗ рждрзИрж░рж┐рж░ ржЬржирзНржпред
 ЁЯФ╢ ржЕрж░рзНржерж╛рзО, рждрзБржорж┐ ржПржХржЯрж╛ рж╢рж░рзНржд ржжрж╛ржУ тАФ ржпрзЗ ржорж╛ржиржЧрзБрж▓рзЛ рж╢рж░рзНржд ржкрзВрж░ржг ржХрж░рзЗ, рж╕рзЗржЧрзБрж▓рзЛ рж░рзЗржЦрзЗржЗ ржирждрзБржи ржЕрзНржпрж╛рж░рзЗ ржмрж╛ржирж╛рзЯред

 $numbers = [1, 2, -1, -2, 3];
 $positive = array_filter($numbers, function ($n) {
     return $n < 0;
 });
 print_r($positive);

 Output : Array
          (
              [2] => -1
              [3] => -2
          )
